{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\OneDrive\\\\Desktop\\\\CELEBAL TECHNOLOGIES\\\\major\\\\src\\\\Pages\\\\FoodOrderChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './FoodOrderChat.css';\nimport foodbg from './foodbg.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FoodOrderChat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const handleInputTextChange = event => {\n    setInputText(event.target.value);\n  };\n  const handleSendMessage = () => {\n    if (inputText.trim() !== '') {\n      processUserMessage(inputText.trim().toLowerCase());\n      setInputText('');\n    }\n  };\n  const processUserMessage = message => {\n    let response = '';\n    switch (message) {\n      case 'hi':\n        response = 'Hello! Welcome to Food Order Bot. How can I assist you today?';\n        break;\n      case 'order meal':\n        response = 'Here is our menu: Burger, Pizza, Pasta, Salad, Veg-Thali, Non-Veg Thali, Chicken, Rice, Chapati . What would you like to order?';\n        break;\n      case 'burger':\n        response = 'Great choice! Burger has been added to your order.';\n        break;\n      case 'pizza':\n        response = 'Sure! Pizza has been added to your order.';\n        break;\n      case 'pasta':\n        response = 'Delicious choice! Pasta has been added to your order.';\n        break;\n      case 'salad':\n        response = 'Healthy option! Salad has been added to your order.';\n        break;\n      case 'Veg-Thali':\n        response = 'Sure! Veg-Thalihas been added to your order.';\n        break;\n      case 'Non-Veg Thali':\n        response = 'Sure! Non-Veg Thali has been added to your order.';\n        break;\n      case 'Chicken':\n        response = 'Sure! Chicken has been added to your order.';\n        break;\n      case 'Rice':\n        response = 'Sure! Rice has been added to your order.';\n        break;\n      case 'Chapati':\n        response = 'Sure! Chapati has been added to your order.';\n        break;\n      case 'done':\n        response = 'Thank you for ordering. Your order will be delivered soon.';\n        break;\n      case 'i want to update my meal':\n        response = 'Yeah sure what do you want to update?';\n        break;\n      case 'i want to cancel my meal':\n        response = 'So sorry to hear that';\n        break;\n      case 'thank you':\n        response = 'welcome';\n        break;\n      default:\n        response = 'Sorry, I didn\\'t understand that. Could you please repeat?';\n        break;\n    }\n    setMessages(prevMessages => [...prevMessages, {\n      text: message,\n      type: 'user'\n    }, {\n      text: response,\n      type: 'bot'\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"food\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Food Ordering Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.type}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputText,\n          onChange: handleInputTextChange,\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(FoodOrderChat, \"XjzYOZb5NzW+E6XGKBVKwRlePKo=\");\n_c = FoodOrderChat;\nexport default FoodOrderChat;\nvar _c;\n$RefreshReg$(_c, \"FoodOrderChat\");","map":{"version":3,"names":["React","useState","foodbg","jsxDEV","_jsxDEV","Fragment","_Fragment","FoodOrderChat","_s","messages","setMessages","inputText","setInputText","handleInputTextChange","event","target","value","handleSendMessage","trim","processUserMessage","toLowerCase","message","response","prevMessages","text","type","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/OneDrive/Desktop/CELEBAL TECHNOLOGIES/major/src/Pages/FoodOrderChat.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './FoodOrderChat.css';\r\nimport foodbg from './foodbg.jpg';\r\n\r\nconst FoodOrderChat = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputText, setInputText] = useState('');\r\n\r\n  const handleInputTextChange = (event) => {\r\n    setInputText(event.target.value);\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (inputText.trim() !== '') {\r\n      processUserMessage(inputText.trim().toLowerCase());\r\n      setInputText('');\r\n    }\r\n  };\r\n\r\n  const processUserMessage = (message) => {\r\n    let response = '';\r\n    switch (message) {\r\n      case 'hi':\r\n        response = 'Hello! Welcome to Food Order Bot. How can I assist you today?';\r\n        break;\r\n\r\n        case 'order meal':\r\n        response = 'Here is our menu: Burger, Pizza, Pasta, Salad, Veg-Thali, Non-Veg Thali, Chicken, Rice, Chapati . What would you like to order?';\r\n        break;\r\n\r\n      case 'burger':\r\n        response = 'Great choice! Burger has been added to your order.';\r\n        break;\r\n\r\n      case 'pizza':\r\n        response = 'Sure! Pizza has been added to your order.';\r\n        break;\r\n\r\n      case 'pasta':\r\n        response = 'Delicious choice! Pasta has been added to your order.';\r\n        break;\r\n\r\n      case 'salad':\r\n        response = 'Healthy option! Salad has been added to your order.';\r\n        break;\r\n\r\n      case 'Veg-Thali':\r\n        response = 'Sure! Veg-Thalihas been added to your order.';\r\n        break;\r\n\r\n      case 'Non-Veg Thali':\r\n        response = 'Sure! Non-Veg Thali has been added to your order.';\r\n        break;\r\n\r\n      case 'Chicken':\r\n        response = 'Sure! Chicken has been added to your order.';\r\n        break;\r\n\r\n      case 'Rice':\r\n        response = 'Sure! Rice has been added to your order.';\r\n        break;\r\n\r\n      case 'Chapati':\r\n        response = 'Sure! Chapati has been added to your order.';\r\n        break;\r\n\r\n      case 'done':\r\n        response = 'Thank you for ordering. Your order will be delivered soon.';\r\n        break;\r\n\r\n      case 'i want to update my meal':\r\n          response = 'Yeah sure what do you want to update?';\r\n          break;\r\n\r\n      case 'i want to cancel my meal':\r\n            response = 'So sorry to hear that';\r\n            break;\r\n\r\n      case 'thank you':\r\n            response = 'welcome';\r\n            break;\r\n      default:\r\n        response = 'Sorry, I didn\\'t understand that. Could you please repeat?';\r\n        break;\r\n    }\r\n\r\n    setMessages((prevMessages) => [...prevMessages, { text: message, type: 'user' }, { text: response, type: 'bot' }]);\r\n  };\r\n\r\n  return (\r\n    <><div className='food'>\r\n    <h1>Food Ordering Chat</h1>\r\n    {/* <img src={foodbg} alt=\"chatbg\" /> */}\r\n    <div className=\"chat-container\">\r\n      {messages.map((message, index) => (\r\n        <div key={index} className={`message ${message.type}`}>\r\n          <p>{message.text}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n    <div className=\"input-container\">\r\n      <input\r\n        type=\"text\"\r\n        value={inputText}\r\n        onChange={handleInputTextChange}\r\n        placeholder=\"Type a message...\"\r\n      />\r\n      <button onClick={handleSendMessage}>Send</button>\r\n    </div>\r\n  </div>\r\n  </>\r\n    \r\n  );\r\n};\r\n\r\nexport default FoodOrderChat;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}